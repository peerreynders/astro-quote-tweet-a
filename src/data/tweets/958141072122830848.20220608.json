{"in_reply_to_screen_name":"yatesco","in_reply_to_status_id_str":"958074185678548993","in_reply_to_user_id_str":"46957234","lang":"en","favorite_count":4,"created_at":"2018-01-30T00:53:27.000Z","display_text_range":[46,178],"entities":{"hashtags":[],"urls":[{"display_url":"reasonml.github.io/reason-react/d…","expanded_url":"https://reasonml.github.io/reason-react/docs/en/state-actions-reducer.html","indices":[155,178],"url":"https://t.co/FMOib91eaR"}],"user_mentions":[{"id_str":"46957234","indices":[0,8],"name":"Colin Yates","screen_name":"yatesco"},{"id_str":"70345946","indices":[9,21],"name":"дэн","screen_name":"dan_abramov"},{"id_str":"875418233733623809","indices":[22,35],"name":"BuckleScript","screen_name":"BuckleScript"},{"id_str":"733507289265496064","indices":[36,45],"name":"Reason","screen_name":"reasonml"}],"symbols":[]},"id_str":"958141072122830848","text":"@yatesco @dan_abramov @BuckleScript @reasonml Single source of truth is an anti-pattern. Reason is solving this wonderfully with component-local reducers: https://t.co/FMOib91eaR","user":{"id_str":"214629170","name":"Blaine Bublitz","profile_image_url_https":"https://pbs.twimg.com/profile_images/1120330495374573569/9L6P665K_normal.png","screen_name":"BlaineBublitz","verified":false},"conversation_count":4,"news_action_type":"conversation","parent":{"in_reply_to_screen_name":"dan_abramov","in_reply_to_status_id_str":"958070783473045504","in_reply_to_user_id_str":"70345946","lang":"en","reply_count":1,"retweet_count":1,"favorite_count":1,"created_at":"2018-01-29T20:27:40.000Z","display_text_range":[13,172],"entities":{"hashtags":[],"urls":[],"user_mentions":[{"id_str":"70345946","indices":[0,12],"name":"дэн","screen_name":"dan_abramov"},{"id_str":"875418233733623809","indices":[132,145],"name":"BuckleScript","screen_name":"BuckleScript"},{"id_str":"733507289265496064","indices":[146,155],"name":"Reason","screen_name":"reasonml"}],"symbols":[]},"id_str":"958074185678548993","text":"@dan_abramov Sounds neat! I love the “single truth” but couldn’t see a neat way of passing that state to deep children... are there @BuckleScript/@reasonml bindings yet :-)","user":{"id_str":"46957234","name":"Colin Yates","profile_image_url_https":"https://pbs.twimg.com/profile_images/1474115331/colin-yates_normal.jpg","screen_name":"yatesco","verified":false}},"card":{"card_platform":{"platform":{"audience":{"name":"production"},"device":{"name":"Swift","version":"12"}}},"name":"summary","url":"https://t.co/FMOib91eaR","binding_values":{"vanity_url":{"scribe_key":"vanity_url","string_value":"reasonml.github.io","type":"STRING"},"domain":{"string_value":"reasonml.github.io","type":"STRING"},"title":{"string_value":"State, Actions & Reducer · ReasonReact","type":"STRING"},"card_url":{"scribe_key":"card_url","string_value":"https://t.co/FMOib91eaR","type":"STRING"}}}}