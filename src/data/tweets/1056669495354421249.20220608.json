{"in_reply_to_screen_name":"acemarke","in_reply_to_status_id_str":"1056669081833738240","in_reply_to_user_id_str":"727704217012604928","lang":"en","favorite_count":33,"created_at":"2018-10-28T22:10:14.000Z","display_text_range":[53,333],"entities":{"hashtags":[],"urls":[],"user_mentions":[{"id_str":"10284132","indices":[0,7],"name":"Meligy (Telstra Purple, ng-sydney, GuruStop.NET)","screen_name":"Meligy"},{"id_str":"70345946","indices":[8,20],"name":"дэн","screen_name":"dan_abramov"},{"id_str":"22745319","indices":[21,29],"name":"Hersh","screen_name":"hersman"},{"id_str":"16468446","indices":[30,43],"name":"Ryan Florence","screen_name":"ryanflorence"},{"id_str":"1566463268","indices":[44,52],"name":"React","screen_name":"reactjs"}],"symbols":[]},"id_str":"1056669495354421249","text":"@Meligy @dan_abramov @hersman @ryanflorence @reactjs That said, I've noted that React devs can often be classified into two groups: those who see the React tree as their app / have a \"component-centric\" view, and those who view their state / logic as their app / have an \"app-centric\" view.\n\nMany Redux users are in the second group.","user":{"id_str":"727704217012604928","name":"Mark Erikson","profile_image_url_https":"https://pbs.twimg.com/profile_images/842582724737163264/tFKLiJI5_normal.jpg","screen_name":"acemarke","verified":false},"conversation_count":2,"news_action_type":"conversation","parent":{"in_reply_to_screen_name":"acemarke","in_reply_to_status_id_str":"1056668871619497986","in_reply_to_user_id_str":"727704217012604928","lang":"en","reply_count":2,"retweet_count":1,"favorite_count":4,"created_at":"2018-10-28T22:08:35.000Z","display_text_range":[53,290],"entities":{"hashtags":[],"urls":[],"user_mentions":[{"id_str":"10284132","indices":[0,7],"name":"Meligy (Telstra Purple, ng-sydney, GuruStop.NET)","screen_name":"Meligy"},{"id_str":"70345946","indices":[8,20],"name":"дэн","screen_name":"dan_abramov"},{"id_str":"22745319","indices":[21,29],"name":"Hersh","screen_name":"hersman"},{"id_str":"16468446","indices":[30,43],"name":"Ryan Florence","screen_name":"ryanflorence"},{"id_str":"1566463268","indices":[44,52],"name":"React","screen_name":"reactjs"}],"symbols":[]},"id_str":"1056669081833738240","text":"@Meligy @dan_abramov @hersman @ryanflorence @reactjs Reducers are a great concept, and as Dan showed in the demo, a very useful tool for putting state update logic in a single place instead of scattered about.\n\n(Also, fun side note: `useState()` is actually built on top of `useReducer()`).","user":{"id_str":"727704217012604928","name":"Mark Erikson","profile_image_url_https":"https://pbs.twimg.com/profile_images/842582724737163264/tFKLiJI5_normal.jpg","screen_name":"acemarke","verified":false}}}